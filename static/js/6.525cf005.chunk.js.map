{"version":3,"sources":["services/api.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/MoviesPage/MoviesPage.jsx"],"names":["API_KEY","BASE_URL","fetchMovies","a","axios","get","responce","trendingMovies","data","results","map","id","title","fetchMovieById","response","fetchReviews","reviewsMovies","author","content","fetchCasts","cast","getMoviesQuery","query","responceCasts","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MoviesPage","useState","findFilm","setFindFilm","films","setFilms","history","useHistory","location","useLocation","queryUrl","URLSearchParams","search","useEffect","then","onSubmit","e","preventDefault","elements","type","name","film","to","pathname","state","params"],"mappings":"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","file":"static/js/6.525cf005.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_KEY = \"fa84220f1f9a5152653d3d7d5b11f1de\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\n\r\nconst fetchMovies = async () => {\r\n  const responce = await axios.get(\r\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\r\n  );\r\n  const trendingMovies = responce.data.results.map(({ id, title }) => {\r\n    return { id, title };\r\n  });\r\n  return trendingMovies;\r\n};\r\n\r\nconst fetchMovieById = async (id) => {\r\n  const response = await axios.get(\r\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nconst fetchReviews = async (id) => {\r\n  const response = await axios.get(\r\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\r\n  );\r\n  const reviewsMovies = response.data.results.map(({ author, content, id }) => {\r\n    return { author, content, id };\r\n  });\r\n  return reviewsMovies;\r\n};\r\n\r\nconst fetchCasts = async (id) => {\r\n  const response = await axios.get(\r\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\r\n  );\r\n  return response.data.cast;\r\n};\r\n\r\nconst getMoviesQuery = async (query) => {\r\n  const responceCasts = await axios.get(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\r\n  );\r\n  return responceCasts.data.results;\r\n};\r\n\r\nexport {\r\n  fetchMovies,\r\n  fetchMovieById,\r\n  fetchCasts,\r\n  fetchReviews,\r\n  getMoviesQuery,\r\n};\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { useState, useEffect } from \"react\";\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\r\nimport { getMoviesQuery } from \"../../services/api\";\r\n\r\nconst MoviesPage = () => {\r\n  const [findFilm, setFindFilm] = useState(null);\r\n  const [films, setFilms] = useState(null);\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const queryUrl = new URLSearchParams(location.search).get(\"query\");\r\n\r\n  useEffect(() => {\r\n    if (findFilm === 0) return;\r\n    getMoviesQuery(findFilm).then(setFilms);\r\n  }, [findFilm]);\r\n\r\n  useEffect(() => {\r\n    if (queryUrl) return;\r\n\r\n    setFindFilm(queryUrl);\r\n  }, [queryUrl]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const query = e.target.elements.query.value;\r\n    setFindFilm(query);\r\n    history.push({\r\n      ...location,\r\n      search: `query=${query}`,\r\n    });\r\n    e.target.elements.query.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>MoviesPage</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" name=\"query\" />\r\n        <button>search</button>\r\n      </form>\r\n      {films &&\r\n        films.map((film) => (\r\n          <li key={film.id}>\r\n            <Link\r\n              to={{\r\n                pathname: `movies/${film.id}`,\r\n                state: { params: location },\r\n              }}\r\n            >\r\n              {film.title}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}