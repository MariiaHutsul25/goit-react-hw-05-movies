{"version":3,"sources":["services/api.jsx","components/HomePage/HomePage.jsx"],"names":["API_KEY","BASE_URL","fetchMovies","a","axios","get","responce","trendingMovies","data","results","map","id","title","fetchMovieById","response","fetchReviews","reviewsMovies","author","content","fetchCasts","cast","getMoviesQuery","query","responceCasts","HomePage","useState","movies","setMovies","location","useLocation","useEffect","then","movie","to","pathname","state","params"],"mappings":"iWAEMA,EAAU,mCACVC,EAAW,+BAEXC,EAAW,uCAAG,8BAAAC,EAAA,sEACKC,IAAMC,IAAN,UAClBJ,EADkB,uCACqBD,IAF1B,cACZM,EADY,OAIZC,EAAiBD,EAASE,KAAKC,QAAQC,KAAI,YAC/C,MAAO,CAAEC,GADyD,EAAhBA,GACrCC,MADqD,EAAZA,UAJtC,kBAOXL,GAPW,2CAAH,qDAUXM,EAAc,uCAAG,WAAOF,GAAP,eAAAR,EAAA,sEACEC,IAAMC,IAAN,UAClBJ,EADkB,kBACAU,EADA,oBACcX,IAFhB,cACfc,EADe,yBAKdA,EAASN,MALK,2CAAH,sDAQdO,EAAY,uCAAG,WAAOJ,GAAP,iBAAAR,EAAA,sEACIC,IAAMC,IAAN,UAClBJ,EADkB,kBACAU,EADA,4BACsBX,IAF1B,cACbc,EADa,OAIbE,EAAgBF,EAASN,KAAKC,QAAQC,KAAI,YAC9C,MAAO,CAAEO,OADkE,EAA1BA,OAChCC,QAD0D,EAAlBA,QAC/BP,GADiD,EAATA,OAJjD,kBAOZK,GAPY,2CAAH,sDAUZG,EAAU,uCAAG,WAAOR,GAAP,eAAAR,EAAA,sEACMC,IAAMC,IAAN,UAClBJ,EADkB,kBACAU,EADA,4BACsBX,IAF5B,cACXc,EADW,yBAIVA,EAASN,KAAKY,MAJJ,2CAAH,sDAOVC,EAAc,uCAAG,WAAOC,GAAP,eAAAnB,EAAA,sEACOC,IAAMC,IAAN,UACvBJ,EADuB,iCACUD,EADV,4DACqEsB,IAF5E,cACfC,EADe,yBAIdA,EAAcf,KAAKC,SAJL,2CAAH,uD,uFCVLe,UA1BE,WACf,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAWC,cAKjB,OAHAC,qBAAU,WACR5B,cAAc6B,KAAKJ,KAClB,IAED,qCACE,0CACCD,GACCA,EAAOhB,KAAI,SAACsB,GAAD,OACT,6BACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYF,EAAMrB,IAC1BwB,MAAO,CAAEC,OAAQR,IAHrB,SAMGI,EAAMpB,SAPFoB,EAAMrB","file":"static/js/4.43277f24.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_KEY = \"fa84220f1f9a5152653d3d7d5b11f1de\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\n\r\nconst fetchMovies = async () => {\r\n  const responce = await axios.get(\r\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\r\n  );\r\n  const trendingMovies = responce.data.results.map(({ id, title }) => {\r\n    return { id, title };\r\n  });\r\n  return trendingMovies;\r\n};\r\n\r\nconst fetchMovieById = async (id) => {\r\n  const response = await axios.get(\r\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nconst fetchReviews = async (id) => {\r\n  const response = await axios.get(\r\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\r\n  );\r\n  const reviewsMovies = response.data.results.map(({ author, content, id }) => {\r\n    return { author, content, id };\r\n  });\r\n  return reviewsMovies;\r\n};\r\n\r\nconst fetchCasts = async (id) => {\r\n  const response = await axios.get(\r\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\r\n  );\r\n  return response.data.cast;\r\n};\r\n\r\nconst getMoviesQuery = async (query) => {\r\n  const responceCasts = await axios.get(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\r\n  );\r\n  return responceCasts.data.results;\r\n};\r\n\r\nexport {\r\n  fetchMovies,\r\n  fetchMovieById,\r\n  fetchCasts,\r\n  fetchReviews,\r\n  getMoviesQuery,\r\n};\r\n","import { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { fetchMovies } from \"../../services/api\";\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchMovies().then(setMovies);\n  }, []);\n  return (\n    <>\n      <h2>HomePage</h2>\n      {movies &&\n        movies.map((movie) => (\n          <li key={movie.id}>\n            <Link\n              to={{\n                pathname: `movies/${movie.id}`,\n                state: { params: location },\n              }}\n            >\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n    </>\n  );\n};\nexport default HomePage;\n"],"sourceRoot":""}